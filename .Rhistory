secret = "6916c8285ea8005f2b45313bd780c139997a98dd")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "56b637a5baffac62cad9",
secret = "8e107541ae1791259e9987d544ca568633da2ebf")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
# OR:
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
content(req)
rm(list = ls())
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "d8ba278ccf2c8cd49e39",
secret = "6916c8285ea8005f2b45313bd780c139997a98dd")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
linkyyyy <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlcode <- readLines(linkyyyy)
close(con)
close(linkyyyy)
htmlcode[1]
htmlcode[2]
htmlcode[3]
htmlcode[10]
nchar(htmlcode[10])
nchar(htmlcode[20])
nchar(htmlcode[30])
nchar(htmlcode[100])
read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
read.fwf(file = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),
skip = 4,
widths = c(12,7,4,9,4,9,4,9,4))
x<- read.fwf(file = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),
skip = 4,
widths = c(12,7,4,9,4,9,4,9,4))
read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",width)
x<- read.fwf(file = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),skip = 4,widths = c(12,7,4,9,4,9,4,9,4))
head(x)
dim(x)
x[1,4]
sum(x[,4])
rm(list = ls())
library(ggplot2)
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, geom = c("point","smooth"))
qplot(hwy, data = mpg, fill = drv)
qplot(hwy, data = mpg, fill = drv, binwidth = 50)
qplot(hwy, data = mpg, fill = drv, binwidth = 10)
qplot(hwy, data = mpg, fill = drv)
qplot(displ,hwy, data =mpg, facets = .~drv)
qplot(displ,hwy, data =mpg, facets = drv~.)
qplot(displ,hwy, data =mpg, facets = drv~., lineWidth = 2)
qplot(displ,hwy, data =mpg, facets = drv~., binwidth =2)
qplot(displ,hwy, data =mpg, facets = drv~., binWidth =2)
qplot(hwy, data =mpg, facets = drv~., binWidth =2)
qplot(hwy, data =mpg, facets = drv~., binwidth =2)
qplot(displ,hwy, data =mpg, facets = .~drv)
qplot(displ,hwy, data =mpg, facets = drv~.)
qplot(displ,hwy, data =mpg, facets = .~drv)
qplot(displ,hwy, data =mpg, facets = drv~.)
rm(list = ls())
library(swirl)
swirl()
head(airquality)
xyplot(ozone~wind, data = airquality)
xyplot(Ozone~wind, data = airquality)
xyplot(Ozone~Wind, data = airquality)
xyplot(Ozone~Wind, data = airquality. col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone~Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone~Wind|as.factor(Month), data = airquality, layout = c(5,1))
xyplot(Ozone~Wind|Month, data = airquality, layout = c(5,1))
p<- xyplot(Ozone~Wind,data=airquality)
p
names(p)
p$formula
mynames[myfull]
p$formula
p[["formula"]]
p[["x.limits"]]
xyplot(y~x|f)
table(f)
xyplot(y~x|f,layout = c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R", local = TRUE))
source(pathtofile("plot1.R", local = TRUE)))
source(pathtofile("plot1.R", local(TRUE)))
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"),local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color,diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price~carat|color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab,ylab = myylab, mmain = mymain)
xyplot(price~carat|color*cut,data=diamonds,strip=FALSE,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
xyplot(price~carat|color*cut,data=diamonds,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
sample(colors(),10)
pal <- colorRamp(c("red","blue"))
pal
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc
colorRampPalette(c("red","yellow"))
p2<- colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3<- colorRampPalette(c("blue","green"),0.5)
p3<- colorRampPalette(c("blue","green"),alpha =0.5)
p3(5)
plot(x,y,pch = 19, col = rgb(0,0.5,0.5))
plot(x,y,pch = 19, col = rgb(0,0.5,0.5,0.3))
cols<- brewer.pal(3,"BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano,col = pal(20))
image(volcano,col = p1(20))
q()
library(swirl)
swirl()
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = "drv")
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("poit","smooth"))
qplot(displ, hwy, data = mpg, color = drv, geom = c("point","smooth"))
qplot(y = hwy, data = mpg, color = drv
)
myhigh
qplot(drv,hwy, data = mpg, geom = "boxplot")
qplot(drv,hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(hwy, data = mpg,facets = drv~., binwidth = 2)
qplot(displ,hwy,data = mpg, geom = c("point","smooth"),facets = .~drv, method = "loess")
qplot(displ,hwy,data = mpg, geom = c("point","smooth"),facets = .~drv, method = loess)
qplot(displ,hwy,data = mpg, geom = c("point","smooth"),facets = .~drv)
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,method="loess")
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,methods="loess")
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,method="loess")
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,methods="loess")
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv)
info()
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,method="loess")
skip()
swirl()
qplot(displ,hwy,data=mg,geom=c("point","smooth"),facets= .~drv,methods = "loess")
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets= .~drv,methods = "loess")
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets= .~drv,methods("loess"))
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets= .~drv)
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,method="loess")
skip()
swirl()
info()
q()
library(swirl)
swirl()
qplot(displ,hwy, data=mpg, geom = c("point","smooth"),facets= .~drv, method = "loess")
path_to_course
swirl()
qplot(displ,hwy, data=mpg, geom = c("point","smooth"),facets= .~drv)
q()
library(swirl)
swirl()
qplot(displ,hwy,data = mpg,geom = c("point","smooth"), facets=.~drv)
g<- ggplot(mpg,aes(displ,hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm") + facet_grid(.~drv)
g+geom_point()+geom_smooth(method = "lm") + facet_grid(.~drv)+ ggtitle("Swirl Rules!")
g+geom_point(color = "pink",size = 4, alpha = 1/2)
g+geom_point(size = 4, alpha = 1/2, aes(color = drv))
g+geom_point(aes(color=drv))+ labs(title = "Swirl Rules!")+ labs(x = "Displacement",y="Hwy Milage")
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color = drv), size = 2, alpha = 1/2) + geom_smooth(size = 4, linetype = 3, method = "lm",se = FALSE)
g+geom_point(aes(color = drv))+theme_bw(base_family = "Times")
plot(myx,myy, type = "l",ylim = c(-3,3))
g<- ggplot(testdat,aes(x = myx,y = myy))
g+geom_line()
g+geom_line()+ ylim(-3,3)
g+geom_line()+ coord_cartesian(ylim = (-3,3))
g+geom_line()+ coord_cartesian(ylim = c(-3,3))
g<- ggplot(mpg, aes(x= displ, y= hwy, color = factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)+geom_smooth(method = "lm",se = FALSE, size = 2, color = "black")
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)+geom_smooth(method = "lm",se = FALSE, size = 2, color = "black")+labs(x = "Displacement",y="Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price,data= diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, shape = cut)
qplot(carat, price, data = diamonds, color = cut,geom = c("point","smooth"), method = "lm")
qplot(carat, price, data = diamonds, color = cut,geom = c("point","smooth"))
path_to_course
path_to_course
swirl()
swirl()
rm(list = ls())
library(swirl)
swirl()
str(diamonds)
qplot(price,data= diamonds)
swirl()
str(diamonds)
qplot(price,data =diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat,price, data = diamonds)
qplot(carat,price, data = diamonds,, shape = cut)
qplot(carat,price, data = diamonds,shape = cut)
qplot(carat,price, data = diamonds,colr = cut)
qplot(carat,price, data = diamonds,color = cut)
qplot(carat,price, data = diamonds,color = cut,geom = c("point","smooth"))
qplot(carat,price, data = diamonds,color = cut,geom = c("point","smooth"), facets = .~cut)
g<- ggplot(diamonds, aes(depth, price))
summary(g)
g+geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1,length = 4),na.rm = TRUE)
cutpoints
diamonds$car2<- cut(diamonds$carat,cutpoints)
g<- ggplot(diamods,aes("depth","price"))
g<- ggplot(diamonds,aes("depth","price"))
g <- ggplot(diamonds,aes(depth,price))
g+geom_point(alpha = 1/3)+ facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method = "lm",size =3, color = "pink")
ggplot(diamonds, aes(carat,price))+ geom_boxplot(+facet_grid(.~cut))
ggplot(diamonds, aes(carat,price))+ geom_boxplot()+facet_grid(.~cut))
ggplot(diamonds, aes(carat,price))+ geom_boxplot()+facet_grid(.~cut)
rm(list = ls())
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
qplot(votes, rating, data = movies)
data(movies)
head(airquality)
qplot(Ozone, Solar, data = airquality)
qplot(Ozone, Solar.R, data = airquality)
qplot(Ozone, Solar.R, data = airquality, panel=panel.loess)
qplot(Ozone, Solar.R, data = airquality, smooth = "loess")
qplot(Ozone, Solar.R, data = airquality) + geom_smooth()
qplot(Ozone, Solar.R, data = airquality) + stats_smooth("loess")
q()
library(lubridate)
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = "lubridate")
help(package = lubridate)
rhis_day <- today()
this_day <- today()
this_day
yar(this_day)
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
mdy("1920/1/2")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
nyc <- now("America/New_York")
nyc
depart <- nyc +days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15)+minutes(50)
?with_tz
arrive<- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(arrival, last_time)
how_long <- new_interval(arrive, last_time)
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
swirl()
q()
library(swirl)
rm(list = ls())
swirl()
swirl()
dist(dataFrame)
hc<- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline
abline(h=1.5, col="blue")
abline(h=4, col="red")
abline(h=.4, col="red")
5
5
12
abline(h=.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix,col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy,col = c("red","orange","purple"),pch = 3, cex = 2,lwd = 2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch = 19, cex =2, col = cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col = cols1, pch=8, cex = 2, lwd = 2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
ponts(x,y,pch = 19,cex = 2, col = col1[newClust2])
points(x,y,pch = 19,cex = 2, col = col1[newClust2])
points(x,y,pch = 19,cex = 2, col = cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx, finalCy,col = cols1, pch = 9,cex =2, lwd =2)
kmeans(dataFrame,centers = 3)
kmObj%iter
kmObj$iter
plot(x,y,col = kmObj$cluster,pch = 19, cex = 2)
points(kmObj$centers,col= c("black","red","green"), pch = 3,cex =3 ,lwd =2 )
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x,y,col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x,y,col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R",local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu%*%diag%*%t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[1]
svd1$v[,1]
svd1$d
head(constantMatrix)
svd$d
svd2$d
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- (svd1$u[,1]*svd1$d[1])%*%svd1$v[,1]
a1 <- (svd1$u[,1]*svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2<- svd1$u[,1:2] %*% diag(svd1$d[1:2] %*% t(svd1$v[,1:2]))
a2<- svd1$u[,1:2] %*% diag(svd1$d[1:2] %*% t(svd1$v[,1:2])
)
a2<- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2<- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd)[,562:563]
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject = 1)
sub1 <- subset(ssd, subject == 1)
dim(sub)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist<- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering<- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(c(sub1[,10:12],maxCon))
mdist <- dist(sub1[,10:12])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering<- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kclust<- kmeans(sub1[,-c(562,563)],centers = 6)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kclust$cluster,sub1$activity)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch =19, ylab = "laying Cluster")
plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown, 1:12],pch=19,ylab="Walking Cluster")
plot(kClust$centers[walkdown, 1:12],pch=19,ylab="Walkdown Cluster")
q()
sd(c(1,-1,2,-2,3,-3))
1+1+4+4+9+9
sqrt(28)
28/5
sqrt(5.6)
q()
dbinom(0,size =3, prob = 1/2)
x = seq(0,3,by=1)
prob_x = dbinom(x,size = 3,prob = 1/2)
cbind(x,prob_x)
plot(x,prob_x,type = 'h', col = 'red')
sum(x*prob_x)
y = seq(0,100,by=1)
proby = dbinom(y,100,0.2)
plot(y,proby,type = 'h')
q()
q()
setwd("H:/UIC/Online/9. Reproducible research/w1")
setwd("H:/UIC/Online/9. Reproducible research/w1/RepData_PeerAssessment1")
render(PA1_template.md)
library(markdown)
render(PA1_template.md)
library(rmarkdown)
render(PA1_template.md)
render(PA1_template.rmd,PA1_template.md)
render("PA1_template.rmd","PA1_template.md")
render("PA1_template.rmd","all")
render("PA1_template.rmd","all")
