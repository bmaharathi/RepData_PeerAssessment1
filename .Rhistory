qplot(carat,price, data = diamonds)
qplot(carat,price, data = diamonds,, shape = cut)
qplot(carat,price, data = diamonds,shape = cut)
qplot(carat,price, data = diamonds,colr = cut)
qplot(carat,price, data = diamonds,color = cut)
qplot(carat,price, data = diamonds,color = cut,geom = c("point","smooth"))
qplot(carat,price, data = diamonds,color = cut,geom = c("point","smooth"), facets = .~cut)
g<- ggplot(diamonds, aes(depth, price))
summary(g)
g+geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1,length = 4),na.rm = TRUE)
cutpoints
diamonds$car2<- cut(diamonds$carat,cutpoints)
g<- ggplot(diamods,aes("depth","price"))
g<- ggplot(diamonds,aes("depth","price"))
g <- ggplot(diamonds,aes(depth,price))
g+geom_point(alpha = 1/3)+ facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method = "lm",size =3, color = "pink")
ggplot(diamonds, aes(carat,price))+ geom_boxplot(+facet_grid(.~cut))
ggplot(diamonds, aes(carat,price))+ geom_boxplot()+facet_grid(.~cut))
ggplot(diamonds, aes(carat,price))+ geom_boxplot()+facet_grid(.~cut)
rm(list = ls())
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
qplot(votes, rating, data = movies)
data(movies)
head(airquality)
qplot(Ozone, Solar, data = airquality)
qplot(Ozone, Solar.R, data = airquality)
qplot(Ozone, Solar.R, data = airquality, panel=panel.loess)
qplot(Ozone, Solar.R, data = airquality, smooth = "loess")
qplot(Ozone, Solar.R, data = airquality) + geom_smooth()
qplot(Ozone, Solar.R, data = airquality) + stats_smooth("loess")
q()
library(lubridate)
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = "lubridate")
help(package = lubridate)
rhis_day <- today()
this_day <- today()
this_day
yar(this_day)
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
mdy("1920/1/2")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
nyc <- now("America/New_York")
nyc
depart <- nyc +days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15)+minutes(50)
?with_tz
arrive<- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(arrival, last_time)
how_long <- new_interval(arrive, last_time)
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
swirl()
q()
library(swirl)
rm(list = ls())
swirl()
swirl()
dist(dataFrame)
hc<- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline
abline(h=1.5, col="blue")
abline(h=4, col="red")
abline(h=.4, col="red")
5
5
12
abline(h=.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix,col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy,col = c("red","orange","purple"),pch = 3, cex = 2,lwd = 2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch = 19, cex =2, col = cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col = cols1, pch=8, cex = 2, lwd = 2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
ponts(x,y,pch = 19,cex = 2, col = col1[newClust2])
points(x,y,pch = 19,cex = 2, col = col1[newClust2])
points(x,y,pch = 19,cex = 2, col = cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx, finalCy,col = cols1, pch = 9,cex =2, lwd =2)
kmeans(dataFrame,centers = 3)
kmObj%iter
kmObj$iter
plot(x,y,col = kmObj$cluster,pch = 19, cex = 2)
points(kmObj$centers,col= c("black","red","green"), pch = 3,cex =3 ,lwd =2 )
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x,y,col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x,y,col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R",local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu%*%diag%*%t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[1]
svd1$v[,1]
svd1$d
head(constantMatrix)
svd$d
svd2$d
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- (svd1$u[,1]*svd1$d[1])%*%svd1$v[,1]
a1 <- (svd1$u[,1]*svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2<- svd1$u[,1:2] %*% diag(svd1$d[1:2] %*% t(svd1$v[,1:2]))
a2<- svd1$u[,1:2] %*% diag(svd1$d[1:2] %*% t(svd1$v[,1:2])
)
a2<- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2<- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd)[,562:563]
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject = 1)
sub1 <- subset(ssd, subject == 1)
dim(sub)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist<- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering<- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(c(sub1[,10:12],maxCon))
mdist <- dist(sub1[,10:12])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering<- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kclust<- kmeans(sub1[,-c(562,563)],centers = 6)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kclust$cluster,sub1$activity)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch =19, ylab = "laying Cluster")
plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown, 1:12],pch=19,ylab="Walking Cluster")
plot(kClust$centers[walkdown, 1:12],pch=19,ylab="Walkdown Cluster")
q()
sd(c(1,-1,2,-2,3,-3))
1+1+4+4+9+9
sqrt(28)
28/5
sqrt(5.6)
q()
dbinom(0,size =3, prob = 1/2)
x = seq(0,3,by=1)
prob_x = dbinom(x,size = 3,prob = 1/2)
cbind(x,prob_x)
plot(x,prob_x,type = 'h', col = 'red')
sum(x*prob_x)
y = seq(0,100,by=1)
proby = dbinom(y,100,0.2)
plot(y,proby,type = 'h')
q()
10/ sqrt(59)
setwd('H:/UIC/Online/9. Reproducible research/w1')
dir()
activity <- read.csv('activity.csv', header = TRUE, sep = ",")
head(activity)
names(activity)
table(activity$date)
act <- activity
library(dplyr)
act2 <- group_by(act,date)
summary(act2)
install.packages(c("httr", "memoise", "nnet", "RMySQL"))
head(act2)
summarise(act2,mean = mean(steps), sd = sd(steps),na.rm = TRUE)
summarise(na.omit(act2),mean = mean(steps), sd = sd(steps))
unique(act2$date)
activity2 <- group_by(act,date)
activity2 <- na.omit(activity2)
summarise(activity2,total_steps = sum(steps))
View(activity2)
View(activity2)
hist(dailysteps)
dailysteps <- summarise(activity2,total_steps = sum(steps))
hist(dailysteps)
hist(dailysteps$total_steps,plot = TRUE)
hist(dailysteps$total_steps,breaks= 30,plot = TRUE)
mean(dailysteps$total_steps)
median(dailysteps$total_steps)
summary(dailysteps)
s<- summary(dailysteps)
s
activity2 <- group_by(activity,date)
activity2 <- na.omit(activity2)
dailysteps <- summarise(activity2,total_steps = sum(steps))
hist(dailysteps$total_steps,breaks= 30,plot = TRUE)
mean(dailysteps$total_steps)
median(dailysteps$total_steps)
h<-hist(dailysteps$total_steps,breaks= 30,plot = TRUE)
h
hist(dailysteps$total_steps,breaks= 10,plot = TRUE)
hist(dailysteps$total_steps,breaks= 60,plot = TRUE)
str(activity2)
activity$date <- as.Date(activity$date)
activity2 <- group_by(activity,date)
activity2 <- na.omit(activity2)
dailysteps <- summarise(activity2,total_steps = sum(steps))
hist(dailysteps$total_steps,breaks= 60,plot = TRUE)
mean(dailysteps$total_steps)
median(dailysteps$total_steps)
head(activity)
activity3 <- group_by(activity, interval)
activity3 <- na.omit(activity3)
avgsteps_interval <- summarise(activity3, avg_steps = mean(steps))
head(avgsteps_interval)
max(avgsteps_interval)
max(avgsteps_interval$avg_steps)
avgsteps_interval[avg_steps = max(avg_steps),]
avgsteps_interval[avg_steps == max(avg_steps),]
avgsteps_interval[avg_steps == max(avgsteps_interval$avg_steps),]
avgsteps_interval[,]
filter(avgsteps_interval, avg_steps == max(avg_steps))
plot(avgsteps_interval,type = 'l')
filter(avgsteps_interval, avg_steps == max(avg_steps))
filter(avgsteps_interval, avg_steps == max(avg_steps))$avg_steps
filter(avgsteps_interval, avg_steps == max(avg_steps))$interval
count(is.na(activity))
count(is.na(activity$steps))
is.na(activity$steps)
sum(is.na(activity$steps))
sum(is.na(activity$date))
sum(is.na(activity$interval))
sum(is.na(activity))
View(avgsteps_interval)
avgsteps <- summarise(activity3, mean_steps = mean(steps), median_steps = median(steps))
plot(avgsteps,type = 'l')
plot(avgsteps$mean_steps,type = 'l')
abline(avgsteps$median_steps)
lines(avgsteps$median_steps)
lines(avgsteps$median_steps,col('red'))
lines(avgsteps$median_steps,col='red'
)
missing_steps <- sum(is.na(activity$steps))
missing_date <- sum(is.na(activity$date))
missing_interval <- sum(is.na(activity$interval))
activity4<- group_by(activity,interval)
avgsteps <- summarise(activity4, mean_steps = mean(steps), median_steps = median(steps),na.rm = TRUE)
View(avgsteps)
View(avgsteps_interval)
avgsteps <- summarise(activity3, mean_steps = mean(steps), median_steps = median(steps))
View(avgsteps)
View(avgsteps)
hist(avgsteps$mean_steps)
hist(avgsteps$median_steps)
activity4[is.na(activity4$steps),]$steps <- avgsteps$mean_steps
sum(is.na(activity4$steps))
hist(activity4$steps)
dailysteps_afms <- summarise(activity4,total_steps = sum(steps))
hist(dailysteps_afms$total_steps)
activity4<- group_by(activity,interval)
activity4[is.na(activity4$steps),]$steps
View(activity4)
aa <- activity4[is.na(activity4$steps),]
View(aa)
unique(aa$date)
activity4$steps[is.na(activity4$steps)] <- tapply(activity4$steps, activity4$interval, mean, na.rm = TRUE)
dailysteps_afms <- summarise(activity4,total_steps = sum(steps))
hist(dailysteps_afms$total_steps)
activity4<- activity
avgsteps <- summarise(activity3, mean_steps = mean(steps), median_steps = median(steps))
activity4$steps[is.na(activity4$steps)] <- tapply(activity4$steps, activity4$interval, mean, na.rm = TRUE)
activity4 <- group_by(activity4, date)
dailysteps_afms <- summarise(activity4,total_steps = sum(steps))
hist(dailysteps_afms$total_steps)
hist(dailysteps_afms$total_steps, breaks = 30)
aggregate(step~date,data = actvity4, sum)
aggregate(step~date,data = activity4, sum)
aggregate(step~date,data = data.frame(activity4), sum)
activity4<- activity
avgsteps <- summarise(activity3, mean_steps = mean(steps), median_steps = median(steps))
activity4$steps[is.na(activity4$steps)] <- tapply(activity4$steps, activity4$interval, mean, na.rm = TRUE)
activity5 <- group_by(activity4, date)
dailysteps_afms <- summarise(activity5,total_steps = sum(steps))
hist(dailysteps_afms$total_steps, breaks = 30)
sum(is.na(activity5))
hist(dailysteps_afms$total_steps, breaks = 20)
hist(dailysteps_afms$total_steps)
mean(activity5$steps)
mean(dailysteps_afms$total_steps)
median(dailysteps_afms$total_steps)
hist(dailysteps_afms$total_steps, breaks = 60, plot = T)
hist(dailysteps_afms$total_steps, breaks = 40, plot = T)
hist(dailysteps_afms$total_steps, breaks = 30, plot = T)
activity4<- activity
avgsteps <- summarise(activity3, mean_steps = mean(steps), median_steps = median(steps))
activity4$steps[is.na(activity4$steps)] <- tapply(activity4$steps, activity4$interval, median, na.rm = TRUE)
activity5 <- group_by(activity4, date)
dailysteps_afms <- summarise(activity5,total_steps = sum(steps))
hist(dailysteps_afms$total_steps, breaks = 30, plot = T)
new_mean <-mean(dailysteps_afms$total_steps)
new_median <-median(dailysteps_afms$total_steps)
weekdays(activity5$date[1])
weekdays(activity5$date[2])
weekdays(as.date(activity5$date[2])
)
weekdays(as.Date(activity5$date[2]))
daty <- weekdays(as.Date(activity5$date))
unique(daty)
summary(daty)
table(daty)
activity6<- activity5
activity6$wdays <- weekdays(as.Date(activity6$date))
mutate(activity6, wk.factor = factor(1*(wdays == "Sunday" | wdays == "Saturday"),labels = c("weekdays","weekends")))
mutate(activity6, wk.factor = factor(1*(wdays == "Sunday" | wdays == "Saturday"),
labels = c("weekdays","weekends")))
mutate(activity6, wk.factor = factor((wdays == "Sunday" | wdays == "Saturday"),levels = c(FALSE,TRUE)
labels = c("weekdays","weekends")))
mutate(activity6, wk.factor = factor(1*(wdays == "Sunday" | wdays == "Saturday"),levels = c(FALSE,TRUE)
labels = c("weekdays","weekends")))
mutate(activity6, wk.factor = factor(1*(wdays == "Sunday" | wdays == "Saturday"),levels = c(FALSE,TRUE)
labels = c("weekdays","weekends")))
activity6<- activity5
activity6$wdays <- weekdays(as.Date(activity6$date))
mutate(activity6, wk.factor = factor((wdays == "Sunday" | wdays == "Saturday"),levels = c(1,2),
labels = c("weekdays","weekends")))
mutate(activity6, wk.factor = factor((wdays == "Sunday" | wdays == "Saturday"),levels = c(FALSE,TRUE),
labels = c("weekdays","weekends")))
mutate(activity6, wk.factor = factor(1*(wdays == "Sunday" | wdays == "Saturday"),levels = c(FALSE,TRUE),
labels = c("weekdays","weekends")))
mutate(activity6, wk.factor = factor((wdays == "Sunday" | wdays == "Saturday"),levels = c(FALSE,TRUE),
labels = c("weekdays","weekends")))
activity6 <-mutate(activity6, wk.factor = factor((wdays == "Sunday" | wdays == "Saturday"),levels = c(FALSE,TRUE),
labels = c("weekdays","weekends")))
activity6
table(activity6$wk.factor)
str(activity6)
table(activity6$wk.factor)
head(activity6)
MeanStep_byIntervalByWkday <- aggregate(steps ~ interval + wk.factor, data=activity6, FUN="mean")
xyplot(steps ~ interval | day, data=MeanStep_byIntervalByWkday, type="l", grid=T, layout=c(1,2))
library(lattice)
xyplot(steps ~ interval | day, data=MeanStep_byIntervalByWkday, type="l", grid=T, layout=c(1,2))
xyplot(steps ~ interval | wk.factor, data=MeanStep_byIntervalByWkday, type="l", grid=T, layout=c(1,2))
activity2 <- group_by(activity,date)
activity2 <- na.omit(activity2)
dailysteps <- summarise(activity2,total_steps = sum(steps))
hist(dailysteps$total_steps,breaks= 60,plot = TRUE)
activity2 <- group_by(activity,date)
activity2 <- na.omit(activity2)
dailysteps <- summarise(activity2,total_steps = sum(steps))
hist(dailysteps$total_steps,main = "Total steps taken per day",
xlab = "Total number of steps",ccol = ”lightgreen”
breaks= 60,plot = TRUE)
dailysteps <- summarise(activity2,total_steps = sum(steps))
hist(dailysteps$total_steps,main = "Total steps taken per day",
xlab = "Total number of steps",ccol = ”lightgreen”,
breaks= 60,plot = TRUE)
hist(dailysteps$total_steps,main = "Total steps taken per day",
xlab = "Total number of steps",col = ”lightgreen”,
breaks= 60,plot = TRUE)
hist(dailysteps$total_steps,main = "Total steps taken per day",
xlab = "Total number of steps",col = "lightgreen",
breaks= 60,plot = TRUE)
hist(dailysteps$total_steps,main = "Total steps taken per day",
xlab = "Total number of steps",col = "blue",
breaks= 60,plot = TRUE
dailysteps <- summarise(activity2,total_steps = sum(steps))
hist(dailysteps$total_steps,main = "Total steps taken per day",
xlab = "Total number of steps",col = "blue",
breaks= 60,plot = TRUE)
hist(dailysteps$total_steps,main = "Total steps taken per day",
xlab = "Total number of steps",col = "blue",
breaks= length(dailysteps$total_steps)-1,plot = TRUE)
dailysteps <- summarise(activity2,total_steps = sum(steps))
hist(dailysteps$total_steps,main = "Total steps taken per day",
xlab = "Total number of steps",col = "blue",
breaks= length(dailysteps$total_steps)-1,plot = TRUE)
summary(dailysteps)
avgsteps_interval <- summarise(activity3, avg_steps = mean(steps))
plot(avgsteps_interval,type = 'l')
plot(avgsteps_interval,type = 'l',
main = "Average number of steps taken across all days in 5min intervals",
xlab = "5min intervals",ylab = "average number of steps taken")
plot(avgsteps_interval,type = 'l', col = 'red',lwd=4,
main = "Average number of steps taken across all days in 5min intervals",
xlab = "5min intervals",ylab = "average number of steps taken")
plot(avgsteps_interval,type = 'l', col = 'red',lwd=2,
main = "Average number of steps taken across all days in 5min intervals",
xlab = "5min intervals",ylab = "average number of steps taken")
plot(avgsteps_interval,type = 'l', col = 'blue',lwd=2,
main = "Average number of steps taken across all days in 5min intervals",
xlab = "5min intervals",ylab = "average number of steps taken")
plot(avgsteps_interval,type = 'l', col = 'blue',lwd=2,
main = "Average number of steps taken across all days",
sub="in 5min intervals",
xlab = "5min intervals",ylab = "average number of steps taken")
plot(avgsteps_interval,type = 'l', col = 'blue',lwd=2,
main = "Average number of steps taken across all days in 5min intervals",
xlab = "5min intervals",ylab = "average number of steps taken")
plot(avgsteps_interval,type = 'l', col = 'brown',lwd=2,
main = "Average number of steps taken across all days in 5min intervals",
xlab = "5min intervals",ylab = "average number of steps taken")
print("hello")
print("hello" maxsteps)
cat(sprintf("<set name=\"%s\" value=\"%f\" ></set>\n", maxsteps, maxsteps))
maxsteps
maxsteps <- filter(avgsteps_interval, avg_steps == max(avg_steps))
maxsteps
cat(sprintf("<set name=\"%s\" value=\"%f\" ></set>\n", maxsteps$interval, maxsteps$avg_steps))
cat(sprintf("name= %s value= %f \n", maxsteps$interval, maxsteps$avg_steps))
cat(sprintf("At %sth interval, the maximum number of %f steps are found. \n", maxsteps$interval, maxsteps$avg_steps))
MeanStepsPerDay
mean(dailysteps$total_steps)
round(mean(dailysteps$total_steps))
sum(is.na(activity))
sum(is.na(activity4))
activity5 <- group_by(activity4, date)
dailysteps_afms <- summarise(activity5,total_steps = sum(steps))
hist(dailysteps_afms$total_steps, breaks = 30, plot = T)
activity5 <- group_by(activity4, date)
dailysteps_afms <- summarise(activity5,total_steps = sum(steps))
hist(dailysteps_afms$total_steps,breaks=length(dailysteps_afms$total_steps)-1,
col = 'red', main = "Histogram of total number of steps taken each day",
xlab = "Total number of Steps",plot = T)
activity6<- activity5
activity6$wdays <- weekdays(as.Date(activity6$date))
activity6 <-mutate(activity6, wk.factor = factor((wdays == "Sunday" | wdays == "Saturday"),levels = c(FALSE,TRUE),
labels = c("weekdays","weekends")))
MeanStep_byIntervalByWkday <- aggregate(steps ~ interval + wk.factor, data=activity6, FUN="mean")
xyplot(steps ~ interval | wk.factor, data=MeanStep_byIntervalByWkday, type="l", grid=T, layout=c(1,2))
xyplot(steps ~ interval | wk.factor, data=MeanStep_byIntervalByWkday, type="l", grid=T, layout=c(1,2),
main="Plot for comparision of number of steps on weekdays and weekends")
xyplot(steps ~ interval | wk.factor, data=MeanStep_byIntervalByWkday, type="l", grid=T, layout=c(1,2),
main="Plot for comparision of number of steps on weekdays and weekends",
xlab = "5min. intervals", ylab = "Number of steps")
xyplot(steps ~ interval | wk.factor, data=MeanStep_byIntervalByWkday, type="l", grid=T, layout=c(1,2),
main="Plot for comparision of number of steps on weekdays and weekends",
xlab = "5min. intervals", ylab = "Number of steps",lwd = 2,col = c("blue","red"))
q()
